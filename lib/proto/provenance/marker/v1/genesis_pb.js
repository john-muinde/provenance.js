// source: provenance/marker/v1/genesis.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var provenance_marker_v1_marker_pb = require('../../../provenance/marker/v1/marker_pb.js');
goog.object.extend(proto, provenance_marker_v1_marker_pb);
goog.exportSymbol('proto.provenance.marker.v1.DenySendAddress', null, global);
goog.exportSymbol('proto.provenance.marker.v1.GenesisState', null, global);
goog.exportSymbol('proto.provenance.marker.v1.MarkerNetAssetValues', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.marker.v1.GenesisState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.provenance.marker.v1.GenesisState.repeatedFields_, null);
};
goog.inherits(proto.provenance.marker.v1.GenesisState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.marker.v1.GenesisState.displayName = 'proto.provenance.marker.v1.GenesisState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.marker.v1.DenySendAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.marker.v1.DenySendAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.marker.v1.DenySendAddress.displayName = 'proto.provenance.marker.v1.DenySendAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.marker.v1.MarkerNetAssetValues = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.provenance.marker.v1.MarkerNetAssetValues.repeatedFields_, null);
};
goog.inherits(proto.provenance.marker.v1.MarkerNetAssetValues, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.marker.v1.MarkerNetAssetValues.displayName = 'proto.provenance.marker.v1.MarkerNetAssetValues';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.provenance.marker.v1.GenesisState.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.marker.v1.GenesisState.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.marker.v1.GenesisState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.marker.v1.GenesisState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.marker.v1.GenesisState.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && provenance_marker_v1_marker_pb.Params.toObject(includeInstance, f),
    markersList: jspb.Message.toObjectList(msg.getMarkersList(),
    provenance_marker_v1_marker_pb.MarkerAccount.toObject, includeInstance),
    netAssetValuesList: jspb.Message.toObjectList(msg.getNetAssetValuesList(),
    proto.provenance.marker.v1.MarkerNetAssetValues.toObject, includeInstance),
    denySendAddressesList: jspb.Message.toObjectList(msg.getDenySendAddressesList(),
    proto.provenance.marker.v1.DenySendAddress.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.marker.v1.GenesisState}
 */
proto.provenance.marker.v1.GenesisState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.marker.v1.GenesisState;
  return proto.provenance.marker.v1.GenesisState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.marker.v1.GenesisState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.marker.v1.GenesisState}
 */
proto.provenance.marker.v1.GenesisState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new provenance_marker_v1_marker_pb.Params;
      reader.readMessage(value,provenance_marker_v1_marker_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    case 2:
      var value = new provenance_marker_v1_marker_pb.MarkerAccount;
      reader.readMessage(value,provenance_marker_v1_marker_pb.MarkerAccount.deserializeBinaryFromReader);
      msg.addMarkers(value);
      break;
    case 3:
      var value = new proto.provenance.marker.v1.MarkerNetAssetValues;
      reader.readMessage(value,proto.provenance.marker.v1.MarkerNetAssetValues.deserializeBinaryFromReader);
      msg.addNetAssetValues(value);
      break;
    case 4:
      var value = new proto.provenance.marker.v1.DenySendAddress;
      reader.readMessage(value,proto.provenance.marker.v1.DenySendAddress.deserializeBinaryFromReader);
      msg.addDenySendAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.marker.v1.GenesisState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.marker.v1.GenesisState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.marker.v1.GenesisState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.marker.v1.GenesisState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      provenance_marker_v1_marker_pb.Params.serializeBinaryToWriter
    );
  }
  f = message.getMarkersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      provenance_marker_v1_marker_pb.MarkerAccount.serializeBinaryToWriter
    );
  }
  f = message.getNetAssetValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.provenance.marker.v1.MarkerNetAssetValues.serializeBinaryToWriter
    );
  }
  f = message.getDenySendAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.provenance.marker.v1.DenySendAddress.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.provenance.marker.v1.Params}
 */
proto.provenance.marker.v1.GenesisState.prototype.getParams = function() {
  return /** @type{?proto.provenance.marker.v1.Params} */ (
    jspb.Message.getWrapperField(this, provenance_marker_v1_marker_pb.Params, 1));
};


/**
 * @param {?proto.provenance.marker.v1.Params|undefined} value
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
*/
proto.provenance.marker.v1.GenesisState.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
 */
proto.provenance.marker.v1.GenesisState.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provenance.marker.v1.GenesisState.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated MarkerAccount markers = 2;
 * @return {!Array<!proto.provenance.marker.v1.MarkerAccount>}
 */
proto.provenance.marker.v1.GenesisState.prototype.getMarkersList = function() {
  return /** @type{!Array<!proto.provenance.marker.v1.MarkerAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, provenance_marker_v1_marker_pb.MarkerAccount, 2));
};


/**
 * @param {!Array<!proto.provenance.marker.v1.MarkerAccount>} value
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
*/
proto.provenance.marker.v1.GenesisState.prototype.setMarkersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.provenance.marker.v1.MarkerAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.provenance.marker.v1.MarkerAccount}
 */
proto.provenance.marker.v1.GenesisState.prototype.addMarkers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.provenance.marker.v1.MarkerAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
 */
proto.provenance.marker.v1.GenesisState.prototype.clearMarkersList = function() {
  return this.setMarkersList([]);
};


/**
 * repeated MarkerNetAssetValues net_asset_values = 3;
 * @return {!Array<!proto.provenance.marker.v1.MarkerNetAssetValues>}
 */
proto.provenance.marker.v1.GenesisState.prototype.getNetAssetValuesList = function() {
  return /** @type{!Array<!proto.provenance.marker.v1.MarkerNetAssetValues>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.provenance.marker.v1.MarkerNetAssetValues, 3));
};


/**
 * @param {!Array<!proto.provenance.marker.v1.MarkerNetAssetValues>} value
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
*/
proto.provenance.marker.v1.GenesisState.prototype.setNetAssetValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.provenance.marker.v1.MarkerNetAssetValues=} opt_value
 * @param {number=} opt_index
 * @return {!proto.provenance.marker.v1.MarkerNetAssetValues}
 */
proto.provenance.marker.v1.GenesisState.prototype.addNetAssetValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.provenance.marker.v1.MarkerNetAssetValues, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
 */
proto.provenance.marker.v1.GenesisState.prototype.clearNetAssetValuesList = function() {
  return this.setNetAssetValuesList([]);
};


/**
 * repeated DenySendAddress deny_send_addresses = 4;
 * @return {!Array<!proto.provenance.marker.v1.DenySendAddress>}
 */
proto.provenance.marker.v1.GenesisState.prototype.getDenySendAddressesList = function() {
  return /** @type{!Array<!proto.provenance.marker.v1.DenySendAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.provenance.marker.v1.DenySendAddress, 4));
};


/**
 * @param {!Array<!proto.provenance.marker.v1.DenySendAddress>} value
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
*/
proto.provenance.marker.v1.GenesisState.prototype.setDenySendAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.provenance.marker.v1.DenySendAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.provenance.marker.v1.DenySendAddress}
 */
proto.provenance.marker.v1.GenesisState.prototype.addDenySendAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.provenance.marker.v1.DenySendAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provenance.marker.v1.GenesisState} returns this
 */
proto.provenance.marker.v1.GenesisState.prototype.clearDenySendAddressesList = function() {
  return this.setDenySendAddressesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.marker.v1.DenySendAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.marker.v1.DenySendAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.marker.v1.DenySendAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.marker.v1.DenySendAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    markerAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    denyAddress: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.marker.v1.DenySendAddress}
 */
proto.provenance.marker.v1.DenySendAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.marker.v1.DenySendAddress;
  return proto.provenance.marker.v1.DenySendAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.marker.v1.DenySendAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.marker.v1.DenySendAddress}
 */
proto.provenance.marker.v1.DenySendAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarkerAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenyAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.marker.v1.DenySendAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.marker.v1.DenySendAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.marker.v1.DenySendAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.marker.v1.DenySendAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarkerAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDenyAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string marker_address = 1;
 * @return {string}
 */
proto.provenance.marker.v1.DenySendAddress.prototype.getMarkerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.marker.v1.DenySendAddress} returns this
 */
proto.provenance.marker.v1.DenySendAddress.prototype.setMarkerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string deny_address = 2;
 * @return {string}
 */
proto.provenance.marker.v1.DenySendAddress.prototype.getDenyAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.marker.v1.DenySendAddress} returns this
 */
proto.provenance.marker.v1.DenySendAddress.prototype.setDenyAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.provenance.marker.v1.MarkerNetAssetValues.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.marker.v1.MarkerNetAssetValues.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.marker.v1.MarkerNetAssetValues} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.marker.v1.MarkerNetAssetValues.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    netAssetValuesList: jspb.Message.toObjectList(msg.getNetAssetValuesList(),
    provenance_marker_v1_marker_pb.NetAssetValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.marker.v1.MarkerNetAssetValues}
 */
proto.provenance.marker.v1.MarkerNetAssetValues.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.marker.v1.MarkerNetAssetValues;
  return proto.provenance.marker.v1.MarkerNetAssetValues.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.marker.v1.MarkerNetAssetValues} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.marker.v1.MarkerNetAssetValues}
 */
proto.provenance.marker.v1.MarkerNetAssetValues.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = new provenance_marker_v1_marker_pb.NetAssetValue;
      reader.readMessage(value,provenance_marker_v1_marker_pb.NetAssetValue.deserializeBinaryFromReader);
      msg.addNetAssetValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.marker.v1.MarkerNetAssetValues.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.marker.v1.MarkerNetAssetValues} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.marker.v1.MarkerNetAssetValues.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetAssetValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      provenance_marker_v1_marker_pb.NetAssetValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.marker.v1.MarkerNetAssetValues} returns this
 */
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated NetAssetValue net_asset_values = 2;
 * @return {!Array<!proto.provenance.marker.v1.NetAssetValue>}
 */
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.getNetAssetValuesList = function() {
  return /** @type{!Array<!proto.provenance.marker.v1.NetAssetValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, provenance_marker_v1_marker_pb.NetAssetValue, 2));
};


/**
 * @param {!Array<!proto.provenance.marker.v1.NetAssetValue>} value
 * @return {!proto.provenance.marker.v1.MarkerNetAssetValues} returns this
*/
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.setNetAssetValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.provenance.marker.v1.NetAssetValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.provenance.marker.v1.NetAssetValue}
 */
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.addNetAssetValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.provenance.marker.v1.NetAssetValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provenance.marker.v1.MarkerNetAssetValues} returns this
 */
proto.provenance.marker.v1.MarkerNetAssetValues.prototype.clearNetAssetValuesList = function() {
  return this.setNetAssetValuesList([]);
};


goog.object.extend(exports, proto.provenance.marker.v1);
