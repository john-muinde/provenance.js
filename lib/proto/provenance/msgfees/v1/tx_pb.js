// source: provenance/msgfees/v1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var amino_amino_pb = require('../../../amino/amino_pb.js');
goog.object.extend(proto, amino_amino_pb);
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
var cosmos_msg_v1_msg_pb = require('../../../cosmos/msg/v1/msg_pb.js');
goog.object.extend(proto, cosmos_msg_v1_msg_pb);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest', null, global);
goog.exportSymbol('proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.displayName = 'proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.displayName = 'proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.displayName = 'proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.displayName = 'proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.displayName = 'proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.displayName = 'proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.displayName = 'proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.displayName = 'proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.displayName = 'proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.displayName = 'proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.displayName = 'proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.displayName = 'proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: (f = msg.getAmount()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f),
    recipient: jspb.Message.getFieldWithDefault(msg, 3, ""),
    from: jspb.Message.getFieldWithDefault(msg, 4, ""),
    recipientBasisPoints: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest;
  return proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientBasisPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRecipientBasisPoints();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cosmos.base.v1beta1.Coin amount = 2;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 2));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} returns this
*/
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string recipient = 3;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.getRecipient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.setRecipient = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string from = 4;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string recipient_basis_points = 5;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.getRecipientBasisPoints = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeRequest.prototype.setRecipientBasisPoints = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse;
  return proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAssessCustomMsgFeeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgTypeUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    additionalFee: (f = msg.getAdditionalFee()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f),
    recipient: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recipientBasisPoints: jspb.Message.getFieldWithDefault(msg, 4, ""),
    authority: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest;
  return proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgTypeUrl(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAdditionalFee(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientBasisPoints(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgTypeUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdditionalFee();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecipientBasisPoints();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string msg_type_url = 1;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.getMsgTypeUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.setMsgTypeUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cosmos.base.v1beta1.Coin additional_fee = 2;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.getAdditionalFee = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 2));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} returns this
*/
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.setAdditionalFee = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.clearAdditionalFee = function() {
  return this.setAdditionalFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.hasAdditionalFee = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string recipient = 3;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.getRecipient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.setRecipient = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string recipient_basis_points = 4;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.getRecipientBasisPoints = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.setRecipientBasisPoints = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string authority = 5;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalRequest.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse;
  return proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgAddMsgFeeProposalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgTypeUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    additionalFee: (f = msg.getAdditionalFee()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f),
    recipient: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recipientBasisPoints: jspb.Message.getFieldWithDefault(msg, 4, ""),
    authority: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest;
  return proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgTypeUrl(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAdditionalFee(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientBasisPoints(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgTypeUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdditionalFee();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecipientBasisPoints();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string msg_type_url = 1;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.getMsgTypeUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.setMsgTypeUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cosmos.base.v1beta1.Coin additional_fee = 2;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.getAdditionalFee = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 2));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} returns this
*/
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.setAdditionalFee = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.clearAdditionalFee = function() {
  return this.setAdditionalFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.hasAdditionalFee = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string recipient = 3;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.getRecipient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.setRecipient = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string recipient_basis_points = 4;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.getRecipientBasisPoints = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.setRecipientBasisPoints = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string authority = 5;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalRequest.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse;
  return proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateMsgFeeProposalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgTypeUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    authority: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest;
  return proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgTypeUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgTypeUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string msg_type_url = 1;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.prototype.getMsgTypeUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.prototype.setMsgTypeUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string authority = 2;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalRequest.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse;
  return proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgRemoveMsgFeeProposalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nhashPerUsdMil: jspb.Message.getFieldWithDefault(msg, 1, 0),
    authority: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest;
  return proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNhashPerUsdMil(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNhashPerUsdMil();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 nhash_per_usd_mil = 1;
 * @return {number}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.prototype.getNhashPerUsdMil = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.prototype.setNhashPerUsdMil = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string authority = 2;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalRequest.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse;
  return proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateNhashPerUsdMilProposalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversionFeeDenom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    authority: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest;
  return proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionFeeDenom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversionFeeDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string conversion_fee_denom = 1;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.prototype.getConversionFeeDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.prototype.setConversionFeeDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string authority = 2;
 * @return {string}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest} returns this
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalRequest.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse;
  return proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provenance.msgfees.v1.MsgUpdateConversionFeeDenomProposalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.provenance.msgfees.v1);
